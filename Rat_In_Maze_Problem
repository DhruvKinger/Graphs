#include <bits/stdc++.h>
using namespace std;
# define N 4
void print(int soln[N][N])
{
    for(int i=0;i<N;i++)
    {
        
        for(int j=0;j<N;j++)
        {
            std::cout << soln[i][j]<<" " ;
        }
        cout<<endl;
    }
}

bool check_condn(int maze[N][N],int x,int y)
{
    if(x>=0 && x<N && y>=0 && y<N && maze[x][y]==1)
    {
        return true;
    }
    return false;
}

bool solve_maze(int maze[N][N],int x,int y,int soln[N][N])
{
    if(x==N-1 && y==N-1)
    {
        soln[x][y]=1;
        return true;
    }
    
    if(check_condn(maze,x,y)==true) // Check if maze[x][y] is valid 
    {
        soln[x][y]=1;
        
        if(solve_maze(maze,x+1,y,soln)==true)
        {
            return true;
        }
        
        if(solve_maze(maze,x,y+1,soln)==true)
        {
            return true;
        }
        
        soln[x][y]=0;
        return false;
        
    }
    return false;
}

bool  maze_path(int maze[N][N])
{
    int soln[N][N]={
      { 0, 0, 0, 0 },
       { 0, 0, 0, 0 },
       { 0, 0, 0, 0 },
       { 0, 0, 0, 0 }
    };
    
    if(solve_maze(maze,0,0,soln)==false)
    {
    cout<<"Doesn't exist ";
    return false;
    }
    print(soln);
    return true;
    
}

int main()
{
   int maze[N][N]={
       { 1, 0, 0, 0 },
       { 1, 1, 0, 1 },
       { 0, 1, 0, 0 }, 
       { 1, 1, 1, 1 } 
       
   };
   maze_path(maze);
    return 0;
}
